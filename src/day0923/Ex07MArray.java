package day0923;
// 다차원 배열(Multidimensional Array)
// 배열의 정의는
// "똑같은 데이터타입의 값들을 모아둔 하나의 데이터타입" 이다.
// 그렇다면 배열을 모아둔 배열도 가능하지 않을까?
// 이렇게 똑같은 데이터타입의 배열을 모아둔 배열을 우리가 다차원 배열이라고 한다.
// 다차원 배열 중 가장 간단한 형태인 2차원 배열은 다음과 같이 선언과 초기화를 한다.
// 데이터타입[][] 배열이름 = new 데이터타입[총 배열의 갯수][각 배열의 길이];

// 2차원 배열의 경우, 여러분들이 아파트를 생각하시면 제일 편하게 이해가 된다.
// 예시: 1층의 1호, 2층의 4호 ....
public class Ex07MArray {
    public static void main(String[] args){
        // 길이가 3인 int 배열 4개가 모여있는 2차원 int 배열의 선언과 초기화
        int[][] mArray = new int[4][3];

        // 우리가 기존 1차원 배열의 경우, 각 칸을 접근할때,
        // 배열이름[인덱스]로 접근을 했었다.
        // 하지만 2차원 배열은 배열이름[인덱스]는 int값이 저장 가능한 칸이 아니라
        // 인덱스번째 배열을 뜻하게 된다.
        System.out.println(mArray[0]);
        // 만약 우리가 int 값을 저장하거나 호출하고 싶다면
        // 명확하게 몇번째 배열의 몇번째 칸인지를 지정해야한다.
        mArray[0][2] = 30;
        System.out.println(mArray[0][2]);

        // 1차원 배열때와 마찬가지로, 인덱스나 길이를 지정할 때에는
        // 변수를 사용할 수 있다.
        int x = 1;
        int y = 2;
        mArray[x][y] = 50;
        System.out.println(mArray[x][y]);

    }
}
















